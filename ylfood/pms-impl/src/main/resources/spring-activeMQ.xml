<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms-4.0.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd">
        

	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<!-- ActiveMQ服务地址 -->
 		<property name="brokerURL" value="failover:(tcp://10.8.48.230:61616,tcp://10.8.48.233:61616,tcp://10.8.48.234:61616)" />
 		<!-- <property name="brokerURL" value="tcp://127.0.0.1:61616" /> -->
		<property name="userName" value="admin"></property>
		<property name="password" value="admin"></property>
	</bean>
	
	<!-- ActiveMQ为我们提供了一个PooledConnectionFactory，通过往里面注入一个ActiveMQConnectionFactory 
	可以用来将Connection、Session和MessageProducer池化，这样可以大大的减少我们的资源消耗。 要依赖于 activemq-pool包 -->
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="connectionFactory" ref="targetConnectionFactory" />
		<property name="maxConnections" value="100" />
	</bean>
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
 	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<property name="targetConnectionFactory" ref="pooledConnectionFactory" />
		<property name="reconnectOnException" value="true" />
	</bean>
	
	<!--这里设置各个消息队列的重发机制 -->
	<bean id="redeliveryPolicyMap"
		class="org.apache.activemq.broker.region.policy.RedeliveryPolicyMap">
		<property name="redeliveryPolicyEntries">
			<list>
				<ref bean="msgRedeliveryPolicyWMS" />
				<ref bean="msgRedeliveryPolicyPWS" />
			</list>
		</property>
	</bean>
	<!-- WMS配置 -->
	<bean id="msgRedeliveryPolicyWMS" class="org.apache.activemq.RedeliveryPolicy">
		<!--重发次数、 延时、延时系数、延时指数开关、目标（重发等待时间1s, 2s, 4s, 8s） -->
		<property name="maximumRedeliveries" value="3" />
		<property name="redeliveryDelay" value="3000" />
		<property name="backOffMultiplier" value="2" />
		<property name="useExponentialBackOff" value="true" />
		<property name="destination" ref="msgQueue" />
	</bean>
	
	
	<!-- PWS配置 -->
	<bean id="msgRedeliveryPolicyPWS" class="org.apache.activemq.RedeliveryPolicy">
		<!--重发次数、 延时、延时系数、延时指数开关、目标（重发等待时间1s, 2s, 4s, 8s） -->
		<property name="maximumRedeliveries" value="3" />
		<property name="redeliveryDelay" value="3000" />
		<property name="backOffMultiplier" value="2" />
		<property name="useExponentialBackOff" value="true" />
		<property name="destination" ref="msgQueueTwo" />
	</bean>
	
	<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
	<!-- 队列模板 这里配置2个，一个用于WMS任务，一个用于PWS任务 -->
	<bean id="pmsCommodityWMSMQ" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="msgQueue" />
		<!-- 使 deliveryMode, priority, timeToLive设置生效 -->
		<property name="explicitQosEnabled" value="true" />
		<!-- 持久化 如果设置为非持久化MQ服务器重启后MQ中的数据会丢失 -->
		<property name="deliveryPersistent" value="true" />
		<!--这里注意:如果不开启事务，消息在异常的情况下是不会重试的 -->
		<property name="sessionTransacted" value="false" />
	</bean>

	<bean id="pmsCommodityPWSMQ" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="msgQueueTwo" />
		<!-- 使 deliveryMode, priority, timeToLive设置生效 -->
		<property name="explicitQosEnabled" value="true" />
		<!-- 持久化 如果设置为非持久化MQ服务器重启后MQ中的数据会丢失 -->
		<property name="deliveryPersistent" value="true" />
		<!--这里注意:如果不开启事务，消息在异常的情况下是不会重试的 -->
		<property name="sessionTransacted" value="false" />
		<!-- 订阅发布模式 -->
		<property name="pubSubDomain" value="true"/>
		<property name="receiveTimeout" value="10000"/>
	</bean>


	<!-- 队列目的地 -->
	<bean id="msgQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="pms_commodity_wms_test" />
	</bean>
	<bean id="msgQueueTwo" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg index="0" value="pms_commodity_pws_test" />
	</bean>
</beans> 